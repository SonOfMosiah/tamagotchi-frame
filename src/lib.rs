pub fn generate_svg_with_color(fill_color: &str, option: u8) -> String {
    let pet_svg_path = generate_pet_svg_path(fill_color, option);
    format!("
    <svg id=\"svg\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"400\" height=\"213.33333333333334\" viewBox=\"0, 0, 400,213.33333333333334\">
        <rect width=\"100%\" height=\"100%\" fill=\"#dfdfdf\" fill-opacity=\"50%\"/>\
        {pet_svg_path}
    </svg>")
}

fn generate_pet_svg_path(fill_color: &str, option: u8) -> String {
    match option {
        1 => generate_pet_1_svg(fill_color),
        2 => generate_pet_2_svg(fill_color),
        _ => String::from("Invalid option"),
    }
}

fn generate_pet_1_svg(fill_color: &str) -> String {
    format!("\
    <g id=\"pet\">\
        <path id=\"path0\" d=\"M146.667 20.000 L 146.667 26.667 140.000 26.667 L 133.333 26.667 133.333 40.000 L 133.333 53.333 140.000 53.333 L 146.667 53.333 146.667 73.333 L 146.667 93.333 140.000 93.333 L 133.333 93.333 133.333 106.667 L 133.333 120.000 126.667 120.000 L 120.000 120.000 120.000 133.333 L 120.000 146.667 126.667 146.667 L 133.333 146.667 133.333 153.333 L 133.333 160.000 140.000 160.000 L 146.667 160.000 146.667 166.667 L 146.667 173.333 153.333 173.333 L 160.000 173.333 160.000 180.000 L 160.000 186.667 153.333 186.667 L 146.667 186.667 146.667 193.333 L 146.667 200.000 166.667 200.000 L 186.667 200.000 186.667 193.333 L 186.667 186.667 220.000 186.667 L 253.333 186.667 253.333 193.333 L 253.333 200.000 260.000 200.000 L 266.667 200.000 266.667 180.000 L 266.667 160.000 273.333 160.000 L 280.000 160.000 280.000 153.333 L 280.000 146.667 286.667 146.667 L 293.333 146.667 293.333 133.333 L 293.333 120.000 286.667 120.000 L 280.000 120.000 280.000 106.667 L 280.000 93.333 273.333 93.333 L 266.667 93.333 266.667 73.333 L 266.667 53.333 273.333 53.333 L 280.000 53.333 280.000 40.000 L 280.000 26.667 273.333 26.667 L 266.667 26.667 266.667 20.000 L 266.667 13.333 253.333 13.333 L 240.000 13.333 240.000 20.000 L 240.000 26.667 233.333 26.667 L 226.667 26.667 226.667 40.000 L 226.667 53.333 220.000 53.333 L 213.333 53.333 213.333 60.000 L 213.333 66.667 206.667 66.667 L 200.000 66.667 200.000 60.000 L 200.000 53.333 193.333 53.333 L 186.667 53.333 186.667 40.000 L 186.667 26.667 180.000 26.667 L 173.333 26.667 173.333 20.000 L 173.333 13.333 160.000 13.333 L 146.667 13.333 146.667 20.000 M253.333 86.667 L 253.333 93.333 260.000 93.333 L 266.667 93.333 266.667 126.667 L 266.667 160.000 246.667 160.000 L 226.667 160.000 226.667 166.667 L 226.667 173.333 193.333 173.333 L 160.000 173.333 160.000 166.667 L 160.000 160.000 153.333 160.000 L 146.667 160.000 146.667 153.333 L 146.667 146.667 153.333 146.667 L 160.000 146.667 160.000 133.333 L 160.000 120.000 153.333 120.000 L 146.667 120.000 146.667 106.667 L 146.667 93.333 153.333 93.333 L 160.000 93.333 160.000 86.667 L 160.000 80.000 206.667 80.000 L 253.333 80.000 253.333 86.667 M160.000 100.000 L 160.000 106.667 166.667 106.667 L 173.333 106.667 173.333 100.000 L 173.333 93.333 166.667 93.333 L 160.000 93.333 160.000 100.000 M240.000 100.000 L 240.000 106.667 246.667 106.667 L 253.333 106.667 253.333 100.000 L 253.333 93.333 246.667 93.333 L 240.000 93.333 240.000 100.000 M186.667 113.333 L 186.667 120.000 206.667 120.000 L 226.667 120.000 226.667 113.333 L 226.667 106.667 206.667 106.667 L 186.667 106.667 186.667 113.333 \" stroke=\"none\" fill=\"#{fill_color}\" fill-rule=\"evenodd\"></path>\
    </g>\
    ")
}

fn generate_pet_2_svg(fill_color: &str) -> String {
    format!("{fill_color}")
}